// <auto-generated />
using System;
using APIRotonda.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIRotonda.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APIRotonda.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("cedula")
                        .IsUnique()
                        .HasFilter("[cedula] IS NOT NULL");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("APIRotonda.Models.Ingrediente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<decimal>("costoUnitario")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("APIRotonda.Models.IngredientePlato", b =>
                {
                    b.Property<int>("fkIngrediente")
                        .HasColumnType("int");

                    b.Property<int>("fkPlato")
                        .HasColumnType("int");

                    b.HasKey("fkIngrediente", "fkPlato");

                    b.HasIndex("fkPlato");

                    b.ToTable("IngredientePlato");
                });

            modelBuilder.Entity("APIRotonda.Models.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccionEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("numeroPedido")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("id");

                    b.HasIndex("fkCliente");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("APIRotonda.Models.PedidoPlato", b =>
                {
                    b.Property<int>("fkPlato")
                        .HasColumnType("int");

                    b.Property<int>("fkPedido")
                        .HasColumnType("int");

                    b.HasKey("fkPlato", "fkPedido");

                    b.HasIndex("fkPedido");

                    b.ToTable("PedidoPlato");
                });

            modelBuilder.Entity("APIRotonda.Models.Plato", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("fkRestaurante")
                        .HasColumnType("int");

                    b.Property<int>("fkTipo")
                        .HasColumnType("int");

                    b.Property<string>("foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrePlato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fkRestaurante");

                    b.HasIndex("fkTipo");

                    b.ToTable("Plato");
                });

            modelBuilder.Entity("APIRotonda.Models.Restaurante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nit")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("nit")
                        .IsUnique();

                    b.ToTable("Restaurante");
                });

            modelBuilder.Entity("APIRotonda.Models.TipoPlato", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TipoPlato");
                });

            modelBuilder.Entity("APIRotonda.Models.IngredientePlato", b =>
                {
                    b.HasOne("APIRotonda.Models.Ingrediente", "Ingrediente")
                        .WithMany("IngredientePlato")
                        .HasForeignKey("fkIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIRotonda.Models.Plato", "Plato")
                        .WithMany("IngredientePlato")
                        .HasForeignKey("fkPlato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Plato");
                });

            modelBuilder.Entity("APIRotonda.Models.Pedido", b =>
                {
                    b.HasOne("APIRotonda.Models.Cliente", "Cliente")
                        .WithMany("Pedido")
                        .HasForeignKey("fkCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("APIRotonda.Models.PedidoPlato", b =>
                {
                    b.HasOne("APIRotonda.Models.Pedido", "Pedido")
                        .WithMany("PedidoPlato")
                        .HasForeignKey("fkPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIRotonda.Models.Plato", "Plato")
                        .WithMany("PedidoPlato")
                        .HasForeignKey("fkPlato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Plato");
                });

            modelBuilder.Entity("APIRotonda.Models.Plato", b =>
                {
                    b.HasOne("APIRotonda.Models.Restaurante", "Restaurante")
                        .WithMany("Plato")
                        .HasForeignKey("fkRestaurante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIRotonda.Models.TipoPlato", "TipoPlato")
                        .WithMany("Plato")
                        .HasForeignKey("fkTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");

                    b.Navigation("TipoPlato");
                });

            modelBuilder.Entity("APIRotonda.Models.Cliente", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("APIRotonda.Models.Ingrediente", b =>
                {
                    b.Navigation("IngredientePlato");
                });

            modelBuilder.Entity("APIRotonda.Models.Pedido", b =>
                {
                    b.Navigation("PedidoPlato");
                });

            modelBuilder.Entity("APIRotonda.Models.Plato", b =>
                {
                    b.Navigation("IngredientePlato");

                    b.Navigation("PedidoPlato");
                });

            modelBuilder.Entity("APIRotonda.Models.Restaurante", b =>
                {
                    b.Navigation("Plato");
                });

            modelBuilder.Entity("APIRotonda.Models.TipoPlato", b =>
                {
                    b.Navigation("Plato");
                });
#pragma warning restore 612, 618
        }
    }
}
